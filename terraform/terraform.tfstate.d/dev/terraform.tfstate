{
  "version": 4,
  "terraform_version": "1.4.4",
  "serial": 43,
  "lineage": "e13b9789-7cb5-8404-342f-7980359890de",
  "outputs": {},
  "resources": [
    {
      "mode": "managed",
      "type": "sysdig_secure_rule_falco",
      "name": "add_custom_exception",
      "provider": "provider[\"registry.terraform.io/sysdiglabs/sysdig\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "append": true,
            "condition": null,
            "description": null,
            "exceptions": [
              {
                "comps": [
                  "in"
                ],
                "fields": [
                  "proc.name"
                ],
                "name": "my_custom_exception_dev",
                "values": "[[[\"python\",\"python2\",\"python3\"]]]"
              }
            ],
            "id": "10029230",
            "minimum_engine_version": null,
            "name": "Read Shell Configuration File_dev",
            "output": null,
            "priority": "warning",
            "source": null,
            "tags": null,
            "timeouts": null,
            "version": 1
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJyZWFkIjozMDAwMDAwMDAwMDAsInVwZGF0ZSI6MzAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "module.prepare_for_new_exception.data.sysdig_secure_rule_falco.managed_rule",
            "module.prepare_for_new_exception.sysdig_secure_rule_falco.custom_dev_rule"
          ]
        }
      ]
    },
    {
      "module": "module.prepare_for_new_exception[0]",
      "mode": "data",
      "type": "sysdig_secure_rule_falco",
      "name": "managed_rule",
      "provider": "provider[\"registry.terraform.io/sysdiglabs/sysdig\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "append": false,
            "condition": "open_read and (fd.filename in (shell_config_filenames) or\n\n fd.name in (shell_config_files) or\n fd.directory in (shell_config_directories)) and\n(not proc.name in (shell_binaries)) and proc_name_exists\n",
            "description": "Detect attempts to read shell configuration files by non-shell programs",
            "exceptions": [
              {
                "comps": [
                  "=",
                  "contains"
                ],
                "fields": [
                  "proc.name",
                  "fd.name"
                ],
                "name": "known_shell_conf_readers",
                "values": "null"
              },
              {
                "comps": [
                  "in"
                ],
                "fields": [
                  "proc.name"
                ],
                "name": "proc_names",
                "values": "[\"docker_binaries\",\"containerd\",\"TaniumCXi\",\"TaniumCX\",\"osqueryd\",\"OAS Manager\",\"aide\",\"BESClient\",\"clamscan\",\"ossec-syscheckd\",\"Broker\",\"puppet\",\"skopeo\",\"chef-client\"]"
              },
              {
                "comps": [
                  "in"
                ],
                "fields": [
                  "proc.aname[3]"
                ],
                "name": "proc_aname_3",
                "values": "[\"qualys_binaries\"]"
              },
              {
                "comps": [
                  "in"
                ],
                "fields": [
                  "proc.aname[4]"
                ],
                "name": "proc_aname_4",
                "values": "[\"qualys_binaries\"]"
              },
              {
                "comps": [
                  "in"
                ],
                "fields": [
                  "proc.aname[5]"
                ],
                "name": "proc_aname_5",
                "values": "[\"TaniumCX\"]"
              },
              {
                "comps": [
                  "in",
                  "in"
                ],
                "fields": [
                  "proc.name",
                  "proc.pname"
                ],
                "name": "proc_name_pname",
                "values": "[[[\"SchedulerRunner\"],[\"osqueryd\"]],[[\"twfim\"],[\"twagent\"]],[[\"wazuh-syscheckd\"],[\"systemd\"]]]"
              },
              {
                "comps": [
                  "in"
                ],
                "fields": [
                  "container.image.repository"
                ],
                "name": "container_image_repo",
                "values": "[\"sysdig_commercial_images\"]"
              },
              {
                "comps": [
                  "in",
                  "endswith"
                ],
                "fields": [
                  "proc.name",
                  "container.image.repository"
                ],
                "name": "proc_name_container_repo",
                "values": "[[[\"analyzer\"],\"registry.aquasec.com/enforcer\"],[[\"wazuh-syscheckd\"],\"/wazuh/wazuh-manager\"]]"
              },
              {
                "comps": [
                  "=",
                  "startswith"
                ],
                "fields": [
                  "proc.name",
                  "fd.name"
                ],
                "name": "proc_name_file_endswith",
                "values": "[[\"containerd\",\"/var/lib/containerd/io.containerd.snapshotter.v1.overlayfs/snapshots/\"],[\"imagecopy\",\"/var/lib/containers/storage/overlay/\"],[\"fuse-overlayfs\",\"/home/rootless/.local/share/docker/fuse-overlayfs/\"]]"
              },
              {
                "comps": [
                  "contains"
                ],
                "fields": [
                  "proc.cmdline"
                ],
                "name": "proc_cmdline_contains",
                "values": "[[\"systemd-tmpfile --clean\"]]"
              },
              {
                "comps": [
                  "in"
                ],
                "fields": [
                  "proc.aname"
                ],
                "name": "proc_aname",
                "values": "[\"security_processes\",\"sisipsdaemon\"]"
              },
              {
                "comps": [
                  "startswith",
                  "startswith"
                ],
                "fields": [
                  "proc.cmdline",
                  "fd.name"
                ],
                "name": "proc_cmdline_prefix_fd_name_prefix",
                "values": "[[\"qtp\",\"/opt/puppet_envs/\"],[\"containerd\",\"/var/lib/containerd/tmpmounts/\"],[\"buildkitd\",\"/tmp/containerd-mount\"]]"
              },
              {
                "comps": [
                  "startswith"
                ],
                "fields": [
                  "proc.exepath"
                ],
                "name": "proc_exepath_startswith",
                "values": "[[\"/apps/tools/CrowdStrike/\"],[\"/apps/tools/Symantec/\"],[\"/opt/splunkforwarder/\"]]"
              }
            ],
            "id": 10018816,
            "index": 0,
            "minimum_engine_version": null,
            "name": "Read Shell Configuration File",
            "output": "a shell configuration file was read by a non-shell program (proc.name=%proc.name proc.pname=%proc.pname file=%fd.name gparent=%proc.aname[2] ggparent=%proc.aname[3] gggparent=%proc.aname[4] ggggparent=%proc.aname[5] gggggparent=%proc.aname[6] ggggggparent=%proc.aname[7] proc.cmdline=%proc.cmdline proc.pcmdline=%proc.pcmdline container.id=%container.id evt.type=%evt.type evt.res=%evt.res proc.pid=%proc.pid proc.cwd=%proc.cwd proc.ppid=%proc.ppid proc.sid=%proc.sid proc.exepath=%proc.exepath user.uid=%user.uid user.loginname=%user.loginname group.gid=%group.gid group.name=%group.name container.name=%container.name image=%container.image.repository user.name=%user.name user.loginuid=%user.loginuid)\n",
            "priority": "WARNING",
            "source": "",
            "tags": [
              "file",
              "NIST",
              "NIST_800-171",
              "NIST_800-171_3.14.6",
              "NIST_800-171_3.3.1",
              "NIST_800-171_3.3.2",
              "NIST_800-171_3.4.5",
              "NIST_800-53",
              "NIST_800-53_AU-6(8)",
              "NIST_800-53_CM-5",
              "NIST_800-53_SI-7",
              "NIST_800-53_AU-2",
              "NIST_800-53_AU-12",
              "FedRAMP",
              "FedRAMP_AU-12",
              "FedRAMP_AU-2",
              "ISO",
              "ISO_27001",
              "ISO_27001_A.9.4.1",
              "HIPAA",
              "HIPAA_164.308(a)",
              "HIPAA_164.312(b)",
              "HIPAA_164.312(c)",
              "HIPAA_164.312(e)",
              "HITRUST",
              "HITRUST_CSF",
              "HITRUST_CSF_01.p",
              "HITRUST_CSF_01.s",
              "HITRUST_CSF_06.i",
              "HITRUST_CSF_09.aa",
              "HITRUST_CSF_09.ab",
              "HITRUST_CSF_09.ad",
              "HITRUST_CSF_09.ae",
              "HITRUST_CSF_09.b",
              "HITRUST_CSF_10.c",
              "HITRUST_CSF_10.j",
              "HITRUST_CSF_10.k",
              "MITRE",
              "MITRE_TA0007_discovery",
              "MITRE_T1083_file_and_directory_discovery"
            ],
            "timeouts": null,
            "version": 13
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.prepare_for_new_exception[0]",
      "mode": "managed",
      "type": "sysdig_secure_rule_falco",
      "name": "custom_dev_rule",
      "provider": "provider[\"registry.terraform.io/sysdiglabs/sysdig\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "append": false,
            "condition": "open_read and (fd.filename in (shell_config_filenames) or\n\n fd.name in (shell_config_files) or\n fd.directory in (shell_config_directories)) and\n(not proc.name in (shell_binaries)) and proc_name_exists\n",
            "description": "Dev",
            "exceptions": [
              {
                "comps": [
                  "=",
                  "contains"
                ],
                "fields": [
                  "proc.name",
                  "fd.name"
                ],
                "name": "known_shell_conf_readers",
                "values": "[]"
              },
              {
                "comps": [
                  "in"
                ],
                "fields": [
                  "proc.name"
                ],
                "name": "proc_names",
                "values": "[[[\"docker_binaries\",\"containerd\",\"TaniumCXi\",\"TaniumCX\",\"osqueryd\",\"OAS Manager\",\"aide\",\"BESClient\",\"clamscan\",\"ossec-syscheckd\",\"Broker\",\"puppet\",\"skopeo\",\"chef-client\"]]]"
              },
              {
                "comps": [
                  "in"
                ],
                "fields": [
                  "proc.aname[3]"
                ],
                "name": "proc_aname_3",
                "values": "[[[\"qualys_binaries\"]]]"
              },
              {
                "comps": [
                  "in"
                ],
                "fields": [
                  "proc.aname[4]"
                ],
                "name": "proc_aname_4",
                "values": "[[[\"qualys_binaries\"]]]"
              },
              {
                "comps": [
                  "in"
                ],
                "fields": [
                  "proc.aname[5]"
                ],
                "name": "proc_aname_5",
                "values": "[[[\"TaniumCX\"]]]"
              },
              {
                "comps": [
                  "in",
                  "in"
                ],
                "fields": [
                  "proc.name",
                  "proc.pname"
                ],
                "name": "proc_name_pname",
                "values": "[[[[[\"SchedulerRunner\"],[\"osqueryd\"]],[[\"twfim\"],[\"twagent\"]],[[\"wazuh-syscheckd\"],[\"systemd\"]]]]]"
              },
              {
                "comps": [
                  "in"
                ],
                "fields": [
                  "container.image.repository"
                ],
                "name": "container_image_repo",
                "values": "[[[\"sysdig_commercial_images\"]]]"
              },
              {
                "comps": [
                  "in",
                  "endswith"
                ],
                "fields": [
                  "proc.name",
                  "container.image.repository"
                ],
                "name": "proc_name_container_repo",
                "values": "[[[[[\"analyzer\"],\"registry.aquasec.com/enforcer\"],[[\"wazuh-syscheckd\"],\"/wazuh/wazuh-manager\"]]]]"
              },
              {
                "comps": [
                  "=",
                  "startswith"
                ],
                "fields": [
                  "proc.name",
                  "fd.name"
                ],
                "name": "proc_name_file_endswith",
                "values": "[[[[\"containerd\",\"/var/lib/containerd/io.containerd.snapshotter.v1.overlayfs/snapshots/\"],[\"imagecopy\",\"/var/lib/containers/storage/overlay/\"],[\"fuse-overlayfs\",\"/home/rootless/.local/share/docker/fuse-overlayfs/\"]]]]"
              },
              {
                "comps": [
                  "contains"
                ],
                "fields": [
                  "proc.cmdline"
                ],
                "name": "proc_cmdline_contains",
                "values": "[[[[\"systemd-tmpfile --clean\"]]]]"
              },
              {
                "comps": [
                  "in"
                ],
                "fields": [
                  "proc.aname"
                ],
                "name": "proc_aname",
                "values": "[[[\"security_processes\",\"sisipsdaemon\"]]]"
              },
              {
                "comps": [
                  "startswith",
                  "startswith"
                ],
                "fields": [
                  "proc.cmdline",
                  "fd.name"
                ],
                "name": "proc_cmdline_prefix_fd_name_prefix",
                "values": "[[[[\"qtp\",\"/opt/puppet_envs/\"],[\"containerd\",\"/var/lib/containerd/tmpmounts/\"],[\"buildkitd\",\"/tmp/containerd-mount\"]]]]"
              },
              {
                "comps": [
                  "startswith"
                ],
                "fields": [
                  "proc.exepath"
                ],
                "name": "proc_exepath_startswith",
                "values": "[[[[\"/apps/tools/CrowdStrike/\"],[\"/apps/tools/Symantec/\"],[\"/opt/splunkforwarder/\"]]]]"
              }
            ],
            "id": "10029229",
            "minimum_engine_version": null,
            "name": "Read Shell Configuration File_dev",
            "output": "foo",
            "priority": "notice",
            "source": "syscall",
            "tags": [],
            "timeouts": null,
            "version": 1
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJyZWFkIjozMDAwMDAwMDAwMDAsInVwZGF0ZSI6MzAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "module.prepare_for_new_exception.data.sysdig_secure_rule_falco.managed_rule"
          ]
        }
      ]
    }
  ],
  "check_results": null
}
